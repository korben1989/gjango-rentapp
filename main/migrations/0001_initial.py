# Generated by Django 4.2.4 on 2023-10-21 19:49

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Areas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_name', models.CharField(blank=True, max_length=80)),
                ('slug', models.SlugField(max_length=80, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Citys',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=50)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Neighborhoods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('neighborhood_name', models.CharField(blank=True, max_length=80)),
                ('slug', models.SlugField(max_length=80, unique=True)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.areas')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.citys')),
            ],
        ),
        migrations.CreateModel(
            name='Postcodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postcode_name', models.CharField(max_length=80)),
                ('slug', models.SlugField(max_length=80, unique=True)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.areas')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.citys')),
                ('neighborhood', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.neighborhoods')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('property_description', models.TextField(max_length=900)),
                ('price', models.PositiveIntegerField()),
                ('phone', models.CharField(max_length=25)),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=50)),
                ('slug', models.SlugField(unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.states')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(choices=[(None, 'Select house type'), ('Appartment', 'Appartment'), ('Single Family House', 'Single Family House'), ('Condominium', 'Condominium'), ('Townhouse', 'Townhouse'), ('Mobile Home / Manufactured Home', 'Mobile Home / Manufactured Home')], default='', max_length=31)),
                ('bedrooms', models.CharField(choices=[(None, 'Select bedrooms'), ('Studio', 'Studio'), ('1 bed', '1 bed'), ('2 bed', '2 bed'), ('3 bed', '3 bed'), ('4 bed+', '4 bed+')], default='', max_length=6)),
                ('bathrooms', models.CharField(choices=[(None, 'Select bathrooms'), ('1 bath', '1 bath'), ('1.5 bath', '1.5 bath'), ('2 bath', '2 bath'), ('2.5 bath', '2.5 bath'), ('3 bath', '3 bath'), ('3.5 bath', '3.5 bath'), ('4 bath+', '4 bath+')], default='', max_length=8)),
                ('square_footage', models.PositiveIntegerField()),
                ('HOA_dues', models.PositiveIntegerField(blank=True, null=True)),
                ('lease_terms', models.TextField(blank=True, max_length=600)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(upload_to='photos/%Y/%m/%d')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyAmenities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appliances', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Dishwasher', 'Dishwasher'), ('Dryer', 'Dryer'), ('Freezer', 'Freezer'), ('Garbage disposal', 'Garbage disposal'), ('Microwave', 'Microwave'), ('Range / Oven', 'Range / Oven'), ('Refrigerator', 'Refrigerator'), ('Trash compactor', 'Trash compactor'), ('Washer', 'Washer')], default='', max_length=108)),
                ('floor_covering', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Carpet', 'Carpet'), ('Concrete', 'Concrete'), ('Hardwood', 'Hardwood'), ('Laminate', 'Laminate'), ('Slate', 'Slate'), ('Softwood', 'Softwood'), ('Tile', 'Tile'), ('Linoleum / Vinyl', 'Linoleum / Vinyl'), ('Other', 'Other')], default='', max_length=84)),
                ('cooling_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Central', 'Central'), ('Evaporative', 'Evaporative'), ('Refrigeration', 'Refrigeration'), ('Geothermal', 'Geothermal'), ('Solar', 'Solar'), ('Wall', 'Wall'), ('Other', 'Other'), ('None', 'None')], default='', max_length=72)),
                ('heating_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Electric', 'Electric'), ('Forced air', 'Forced air'), ('Heat pump', 'Heat pump'), ('Geothermal', 'Geothermal'), ('Radiant', 'Radiant'), ('Stove', 'Stove'), ('Gas', 'Gas'), ('Solar', 'Solar'), ('Wall', 'Wall'), ('Other', 'Other')], default='', max_length=84)),
                ('rooms', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Dining room', 'Dining room'), ('Family room', 'Family room'), ('Laundry room', 'Laundry room'), ('Master bath', 'Master bath'), ('Mud room', 'Mud room'), ('Office', 'Office'), ('Pantry', 'Pantry'), ('Workshop', 'Workshop'), ('Recreation room', 'Recreation room'), ('Walk-in closet', 'Walk-in closet')], default='', max_length=119)),
                ('outdoor_amenities', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Balcony / patio', 'Balcony / patio'), ('Barbecue area', 'Barbecue area'), ('Deck', 'Deck'), ('Dock', 'Dock'), ('Fenced yard', 'Fenced yard'), ('Garden', 'Garden'), ('Greenhouse', 'Greenhouse'), ('Spa / hot tub', 'Spa / hot tub'), ('Lawn', 'Lawn'), ('Pond', 'Pond'), ('Pool', 'Pool'), ('Porch', 'Porch')], default='', max_length=119)),
                ('parking', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Carport', 'Carport'), ('Garage-attached', 'Garage-attached'), ('Garage-detached', 'Garage-detached'), ('Off-street', 'Off-street'), ('On-street', 'On-street'), ('None', 'None')], default='', max_length=72)),
                ('view', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('City', 'City'), ('Mountain', 'Mountain'), ('Park', 'Park'), ('Territorial', 'Territorial'), ('Water', 'Water'), ('None', 'None')], default='', max_length=72)),
                ('pets', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No pets allowed', 'No pets allowed'), ('Cats allowed', 'Cats allowed'), ('Dogs allowed', 'Dogs allowed')], default='', max_length=72)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyAddUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_unit', models.CharField(blank=True, max_length=100)),
                ('bedrooms_unit', models.CharField(blank=True, choices=[(None, 'Select bedrooms'), ('Studio', 'Studio'), ('1 bed', '1 bed'), ('2 bed', '2 bed'), ('3 bed', '3 bed'), ('4 bed+', '4 bed+')], default='', max_length=6)),
                ('bathrooms_unit', models.CharField(blank=True, choices=[(None, 'Select bathrooms'), ('1 bath', '1 bath'), ('1.5 bath', '1.5 bath'), ('2 bath', '2 bath'), ('2.5 bath', '2.5 bath'), ('3 bath', '3 bath'), ('3.5 bath', '3.5 bath'), ('4 bath+', '4 bath+')], default='', max_length=8)),
                ('square_footage_unit', models.PositiveIntegerField(blank=True, null=True)),
                ('price_unit', models.PositiveIntegerField(blank=True, null=True)),
                ('image_unit', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('neighborhood', models.CharField(blank=True, max_length=100)),
                ('area', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=50)),
                ('postcode', models.CharField(max_length=20)),
                ('latitude', models.CharField(max_length=15)),
                ('longitude', models.CharField(max_length=15)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('areas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.areas')),
                ('citys', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.citys')),
                ('neighborhoods', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.neighborhoods')),
                ('postcodes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.postcodes')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.property')),
                ('states', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.states')),
            ],
        ),
        migrations.AddField(
            model_name='postcodes',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.states'),
        ),
        migrations.AddField(
            model_name='neighborhoods',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.states'),
        ),
        migrations.AddField(
            model_name='citys',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.states'),
        ),
        migrations.AddField(
            model_name='areas',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.citys'),
        ),
        migrations.AddField(
            model_name='areas',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.states'),
        ),
    ]
